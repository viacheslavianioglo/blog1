<?php//// Конттроллер страницы чтения.////function __autoload($classname){//    include_once("m/articles/$classname.php");//}class C_Articles extends C_Base{	//	// Конструктор.	//		public function action_index(){		$this->title .= '::Все статьи';        $model =  M_Articles::Instance();        $articles = $model->All_intro($model->All());		$this->content = $this->Template('v/articles/index.php', array('articles' => $articles));	}    public function action_my(){        if(!M_Users::Instance()->Can('REGISTERED'))            $this->redirect('/404');        $id_user = M_Users::Instance()->GetUid();        $this->title .= '::Мои статьи';        $model =  M_Articles::Instance();        $articles = $model->All_intro($model->All_articles_from_user($id_user));        $this->content = $this->Template('v/articles/index.php', array('articles' => $articles));    }    public function action_user(){        $id_user = isset($this->params[2]) ? (int)$this->params[2] : 1;        $this->title .= '::Cтатьи юзера';        $model =  M_Articles::Instance();        $articles = $model->All_intro($model->All_articles_from_user($id_user));        $this->content = $this->Template('v/articles/index.php', array('articles' => $articles));    }    public function action_show(){        $model =  M_Articles::Instance();        $id = isset($this->params[2]) ? (int)$this->params[2] : 1;        $article = $model->Get($id);        $user =  $model->Get_user_from_article($id);        $this->title .= '::'.$article['title'];        $this->content = $this->Template('v/articles/article.php', array('article' => $article, 'user' => $user));    }    public function action_editor(){        $model = M_Articles::Instance();        $id_user = M_Users::Instance()->GetUid();        if(M_Users::Instance()->Can('EDIT_ALL_ARTICLES'))        {            $articles = $model->All();        }        elseif (M_Users::Instance()->Can('REGISTERED')  )        {            $articles = $model->All_articles_from_user($id_user);        }        else        {            $this->redirect('/404');            die();        }        $this->title .= '::Редактор статей';        $this->content = $this->Template('v/articles/editor.php', array('articles' => $articles));    }    public function action_new(){        if(!M_Users::Instance()->Can('REGISTERED'))        {            $this->redirect('/404');            die();        }        $id_user = M_Users::Instance()->GetUid();        $this->title .= '::Новая статья';        $model =  M_Articles::Instance();        // Обработка отправки формы.        if ($this->IsPost())        {            if ($model->Add($_POST['title'], $_POST['content'], $id_user))            {                header('Location: /articles/editor');                die();            }            $title = $_POST['title'];            $content = $_POST['content'];            $error = true;        }        else        {            $title = '';            $content = '';            $error = false;        }        $this->content = $this->Template('v/articles/new.php', array('title' => $title, 'content' => $content, 'error' => $error ));    }		public function action_edit(){        $id_article = isset($this->params[2]) ? (int)$this->params[2] : 1;        $model =  M_Articles::Instance();        $user_owner = $model->Get_user_from_article($id_article);//        if (!$model->belongs_article_to_user(M_Users::Instance()->GetUid(),$id_article) && (!M_Users::Instance()->Can('EDIT_ALL_ARTICLES')))        if ( (M_Users::Instance()->GetUid()!= $user_owner['id_user'])  && (!M_Users::Instance()->Can('EDIT_ALL_ARTICLES')))        {            $this->redirect('/404');            die();        }		$this->title .= '::Редактирование';        if (isset($_POST['delete']))        {            $model->Delete($id_article);            header('Location: /articles/editor');            die();        }        elseif(isset($_POST['edit']))        {            if ($model->Edit($id_article, $_POST['title'], $_POST['content']))            {                header('Location: /articles/editor');                die();            }            $title = $_POST['title'];            $content = $_POST['content'];            $error = true;        }        else        {            $article = $model->Get($id_article);            $title = $article['title'];            $content = $article['content'];            $error = false;        }		$this->content = $this->Template('v/articles/edit.php', array('title' => $title, 'content' => $content, 'error' => $error));	}}